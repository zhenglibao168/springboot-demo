<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.zlb.dao.StudentMapper">
    <sql id="Base_Column_List">
        id,
        student_name
    </sql>
    <resultMap id="StudentBO" type="cn.zlb.biz.domain.StudentDO">
        <result property="id" column="id"/>
        <result property="studentName" column="student_name"/>
    </resultMap>

    <insert id="insert" parameterType="cn.zlb.biz.domain.StudentDO" useGeneratedKeys="true" keyProperty="id">
        insert into student(student_name)
        values (#{studentName})
    </insert>

    <update id="update" parameterType="cn.zlb.biz.domain.StudentDO">
        update student
        set student_name='test'
        where id = #{id}
    </update>
    <!--    select默认开启一级缓存，分布式下容易产生脏数据，flushCache="true"关闭一级缓存-->

    <select id="getStudents" resultMap="StudentBO">
        select id, student_name
        from student
    </select>

    <select id="selectOne" parameterType="cn.zlb.biz.domain.StudentDO" resultMap="StudentBO">
        select id, student_name
        from student
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="studentName != null and studentName != ''">
                and student_name = #{studentName}
            </if>
        </where>
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-10-11-->
    <select id="findByStudentName" resultMap="StudentBO">
        select
        <include refid="Base_Column_List"/>
        from student
        <where>
            <if test="studentName != null and studentName != ''">
                and student_name = #{studentName}
            </if>
        </where>
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-10-11-->
    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT ignore INTO student(id,
                            student_name)VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (#{element.id},
             #{element.studentName})
        </foreach>
    </insert>

    <!--auto generated by MybatisCodeHelper on 2020-10-12-->
    <update id="updateStudentNameById">
        update student
        set student_name=#{updatedStudentName}
        where id = #{id}
    </update>

    <!--auto generated by MybatisCodeHelper on 2020-10-12-->
    <delete id="deleteById">
        delete
        from student
        where id = #{id}
    </delete>

    <!--auto generated by MybatisCodeHelper on 2020-10-12-->
    <select id="findByStudentNameStartingWith" resultMap="StudentBO">
        select
        <include refid="Base_Column_List"/>
        from student
        where student_name like concat(#{studentNamePrefix}, '%')
    </select>
</mapper>